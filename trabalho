class main:

    def cycleSort(self, array):
        writes = 0


        for cycleStart in range(0, len(array) - 1):
            item = array[cycleStart]


            pos = cycleStart
            for i in range(cycleStart + 1, len(array)):
                if array[i] < item:
                    pos += 1


            if pos == cycleStart:
                continue

            while item == array[pos]:
                pos += 1
            array[pos], item = item, array[pos]
            writes += 1

            while pos != cycleStart:

                pos = cycleStart
                for i in range(cycleStart + 1, len(array)):
                    if array[i] < item:
                        pos += 1

                while item == array[pos]:
                    pos += 1
                array[pos], item = item, array[pos]
                writes += 1

        return writes


    def bucketSort(self, array):
        bucket = []
        for i in range(len(array)):
            bucket.append([])

        for j in array:
            index_b = int(10 * j)
            bucket[index_b].append(j)

        for i in range(len(array)):
            bucket[i] = sorted(bucket[i])

        k = 0
        for i in range(len(array)):
            for j in range(len(bucket[i])):
                array[k] = bucket[i][j]
                k += 1
        return array

    def countingSort(self, array, place):
        size = len(array)
        output = [0] * size
        count = [0] * 10
        for i in range(0, size):
            index = array[i] // place
            count[index % 10] += 1
        for i in range(1, 10):
            count[i] += count[i - 1]
        i = size - 1
        while i >= 0:
            index = array[i] // place
            output[count[index % 10] - 1] = array[i]
            count[index % 10] -= 1
            i -= 1
        for i in range(0, size):
            array[i] = output[i]

    def radixSort(self, array):
        max_element = max(array)
        place = 1
        while max_element // place > 0:
            Main.countingSort(array,place)
            place *= 10
        print(data)

Main = main()

op = int(input(print("Escolha um metodo:\n1 >>> Cycle Sort\n2 >>> Bucket Sort\n3 >>> Radix Sort\n")))
if op is not 1 or 2 or 3:
    print("Resposta incorreta")
array = []
i = 0
print("Digite os valores ou -1 para ordenar\n")
while i != -1:
    i = float(input(print(": ")))
    array.append(i)


if op is 1:
    arr = array
    n = len(arr)
    Main.cycleSort(arr)
    for i in range(0, n):
        print(arr[i])

elif op is 2:
    print(Main.bucketSort(array))

elif op is 3:

    data = array
    Main.radixSort(data)
    print(data)
